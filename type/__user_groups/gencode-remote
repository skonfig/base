#!/bin/sh -e
#
# 2012 Steven Armstrong (steven-cdist at armstrong.cc)
# 2025 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

if test -f "${__object:?}/parameter/user"
then
	user=$(cat "${__object:?}/parameter/user")
else
	user=${__object_id:?}
fi
state_should=$(cat "${__object:?}/parameter/state")
oldusermod=$(cat "${__object:?}/explorer/oldusermod")
os=$(cat "${__global:?}/explorer/os")

get_changed_groups() {
   # groups have to be sorted for comparison with comm(1).
   LC_ALL=C sort "${__object:?}/parameter/group" \
   | LC_ALL=C comm "$@" "${__object:?}/explorer/group" -
}

case ${state_should}
in
   (present)
      changed_groups=$(get_changed_groups -13)
      ;;
   (absent)
      changed_groups=$(get_changed_groups -12)
      ;;
esac

if test -z "${changed_groups}"
then
   # Nothing to do, move along
   exit 0
fi

for group in ${changed_groups}
do
   if [ "${os}" = 'netbsd' ] || [ "${os}" = 'openbsd' ]
   then
      case ${state_should}
      in
         (present) echo "usermod -G \"${group}\" \"${user}\"" ;;
         (absent) echo 'NetBSD and OpenBSD do not have a command to remove a user from a group' >&2 ; exit 1 ;;
      esac
   elif [ "${os}" = 'freebsd' ]
   then
      case ${state_should}
      in
         (present) echo "pw groupmod \"${group}\" -m \"${user}\"" ;;
         (absent) echo "pw groupmod \"${group}\" -d \"${user}\"" ;;
      esac
   elif [ "${oldusermod}" = 'true' ]
   then
      case ${state_should}
      in
         (present) echo "usermod -A \"${group}\" \"${user}\"" ;;
         (absent) echo "usermod -R \"${group}\" \"${user}\"" ;;
      esac
   else
      case ${state_should}
      in
         (present) echo "gpasswd -a \"${user}\" \"${group}\"" ;;
         (absent) echo "gpasswd -d \"${user}\" \"${group}\"" ;;
      esac
   fi
done

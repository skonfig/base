#!/bin/sh -e
#
# 2011 Ramon Salvad√≥ (rsalvado at gnuine.com)
# 2012-2015 Steven Armstrong (steven-cdist at armstrong.cc)
# 2012-2019 Nico Schottelius (nico-cdist at schottelius.org)
# 2020,2025 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#

TZ=$(cat "${__object:?}/parameter/tz")
os=$(cat "${__global:?}/explorer/os")
localtime_file=/etc/localtime
zoneinfo_file=$(cat "${__object:?}/explorer/zoneinfo_file")

canonicalize_path() {
	# NOTE: Only works for absolute paths
	# shellcheck disable=SC2016
	printf '%s\n' "${1:?}" \
	| tr '/' '\n' \
	| sed -n -e '
	    # ignore empty lines (produced by // in original path and leading /)
	    /^$/bq
		# ignore /./ components
	    /^\.$/bq
		# drop a component from the "stack" if a .. is met
	    /^\.\.$/{
	      # delete last line from hold space
	      x
	      s/^\(.*\)\n.*$/\1/
	      x
	      bq
	    }
	    # push component to "stack" (append to hold space)
	    H
	    :q
	    # print stack contents (hold space) at the end
	    ${x;p;}' \
	| sed -n -e 'H;${g;s/^\n//;s/\n/\//g;p;}'
}

count_path_components() (
	components=$(canonicalize_path "$1")
	IFS=/
	# shellcheck disable=SC2048,SC2086
	set -f -- ${components#/}
	echo $#
)

backdirs() {
	test "${1:-0}" -gt 0 || { printf './\n'; return 0; }
	until test "${1:-0}" -le 0
	do
		printf '../'
		set -- $(($1 - 1))
	done
	printf '\n'
}

invalid_timezone() {
	# NOTE: When the tzdata package was just installed, this might produce an
	# invalid timezone error because the explorer has been run before the
	# installation.
	printf 'Invalid timezone: %s\n' "${TZ}" >&2
	exit 1
}

# some OSes require a timezone package to be installed first
case ${os}
in
	(adelie|alpine|archlinux|debian|devuan|ubuntu|centos|redhat|scientific|voidlinux)
		__package tzdata
		export require=__package/tzdata
		;;
	(gentoo)
		__package sys-libs/timezone-data
		export require=__package/sys-libs/timezone-data
		;;
	(suse)
		__package timezone
		export require=__package/timezone
		;;
	(slackware)
		__package glibc-zoneinfo
		export require=__package/glibc-zoneinfo
		;;
esac

# configure the timezone
case ${os}
in
	(adelie|alpine|slackware)
		test -n "${zoneinfo_file}" || invalid_timezone
		;;
	(coreos|debian|devuan|ubuntu)
		test -n "${zoneinfo_file}" || invalid_timezone

		__file /etc/timezone \
			--owner 0 --group 0 --mode 0644 \
			--source - <<-EOF
		${TZ}
		EOF
		;;
	(centos|redhat|scientific)
		test -n "${zoneinfo_file}" || invalid_timezone

		__file /etc/sysconfig/clock \
			--state exists \
			--owner 0 --group 0 --mode 0644
		require=__file/etc/sysconfig/clock \
		__key_value /etc/sysconfig/clock:ZONE \
			--file /etc/sysconfig/clock \
			--delimiter '=' --exact_delimiter \
			--key 'ZONE' \
			--value "\"${TZ}\""
		;;
	(gentoo)
		test -n "${zoneinfo_file}" || invalid_timezone

		# XXX: systemd?

		__file /etc/timezone \
			--owner 0 --group 0 --mode 0644 \
			--source - <<-EOF
		${TZ}
		EOF

		# XXX: Should /etc/TZ be updated??
		__file /etc/TZ \
			--owner 0 --group 0 --mode 0644 \
			--source - <<-EOF
		${TZ}
		EOF
		;;
	(freebsd)
		test -n "${zoneinfo_file}" || invalid_timezone

		__file /var/db/zoneinfo \
			--owner 0 --group 0 --mode 0644 \
			--source - <<-EOF
		${TZ}
		EOF
		;;
	(suse)
		os_version=$(cat "${__global:?}/explorer/os_version")
		os_major=${os_version%%[!0-9]*}

		# TODO: Consider using `yast2 timezone ...` instead
		if test $((os_major)) -lt 15 || test $((os_major)) -eq 42
		then
			# It seems that starting with SuSE 15 /etc/sysconfig/clock is
			# abandoned.  The file still exists but only contains a
			# DEFAULT_TIMEZONE entry.
			__key_value /etc/sysconfig/clock:TIMEZONE \
				--file /etc/sysconfig/clock \
				--delimiter '=' --exact_delimiter \
				--key TIMEZONE --value "\"${TZ}\""
		fi
		;;
	(voidlinux)
		test -n "${zoneinfo_file}" || invalid_timezone

		__key_value /etc/rc.conf:TIMEZONE \
			--file /etc/rc.conf \
			--key TIMEZONE \
			--delimiter '=' --exact_delimiter \
			--value "\"${TZ}\""
		;;
	(*)
		: "${__type:?}"  # make shellcheck happy
		echo "Your operating system (${os}) is currently not supported by this type (${__type##*/})." >&2
		echo 'Please contribute an implementation for it if you can.' >&2
		exit 1
		;;
esac

rel_zoneinfo_file="$(backdirs "$(count_path_components "${localtime_file%/*}")")${zoneinfo_file#/}"
__link "${localtime_file}" \
	--type symbolic \
	--source "${rel_zoneinfo_file}"

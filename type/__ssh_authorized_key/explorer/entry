#!/bin/sh -e
#
# 2014 Steven Armstrong (steven-cdist at armstrong.cc)
# 2023 Dennis Camera (dennis.camera at riiengineering.ch)
#
# This file is part of skonfig-base.
#
# skonfig-base is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# skonfig-base is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with skonfig-base. If not, see <http://www.gnu.org/licenses/>.
#
# Print sorted lines from --file where the type and key match --key.
#

# extract the keytype and base64 encoded key ignoring any options and comment
type_and_key=$(
	awk <"${__object:?}/parameter/key" '
	!/^(ssh|ecdsa|sk)-/ && /.(ssh|ecdsa|sk)-[^ ]+/ {
		# collapse quoted sections (quotes cannot be nested as per OpenSSH code)
		gsub(/".*[^\\]"/, "\"\"")
		# remove options ($1)
		$1 = ""; $0 = substr($0, index($0, $2))
	}
	/^(ssh|ecdsa|sk)-[^ ]+/ {
		printf "%s %s" ORS, $1, $2
		exit  # only print first key of file
	}'
)

file=$(cat "${__object:?}/parameter/file")
test -e "${file}" || exit 0

# get entries which match the type and key

awk -v tk="${type_and_key}" <"${file}" '
# ensure to not print lines if tk is empty, which is the case with an
# invalid key, because it would result in all entries being removed from the
# file.

/^[^#]/ && tk {
	# NOTE: do not require tk to be at the beginning of the line as there may be
	#       options preceesing the key.
	p = index($0, tk)
	if (0 < p) {
		rest = substr($0, p + length(tk))
		if (!rest || rest ~ /^ /) {
			print
		}
	}
}
' \
| LC_ALL=C sort
